apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

        /*解决ARouter::Compiler >>> No module name编译报错*/
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME    : project.getName()]
            }
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{}
        dev{}
        releasedebug{}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    api rootProject.ext.dependencies["support"]["appcompat-v7"]
    api rootProject.ext.dependencies["support"]["support-v4"]
    api rootProject.ext.dependencies["support"]["percent"]
    api rootProject.ext.dependencies["support"]["design"]
    api rootProject.ext.dependencies["support"]["recyclerview-v7"]
    api rootProject.ext.dependencies["support"]["cardview-v7"]
    api rootProject.ext.dependencies["support"]["dynamic-animation"]
    api rootProject.ext.dependencies["constraint-layout"]


    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["androideventbus"]

    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["annotation"]


    api rootProject.ext.dependencies["retrofit2"]["retrofit"]
    api rootProject.ext.dependencies["retrofit2"]["converter-gson"]
    api rootProject.ext.dependencies["retrofit2"]["adapter-rxjava2"]


    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava"]

    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["interceptor"]

    api rootProject.ext.dependencies["tablayout"]
    api rootProject.ext.dependencies["rxpermissions"]

    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycle-components"]

    api rootProject.ext.dependencies["glide"]

    api rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    api rootProject.ext.dependencies["mmkv"]

    api rootProject.ext.dependencies["fragmentationx"]

    api (rootProject.ext.dependencies["dagger2"]){
        exclude group: 'javax.annotation'
        exclude module: 'annotations'
    }
    annotationProcessor (rootProject.ext.dependencies["dagger2-compiler"]){
        exclude group: 'javax.annotation'
        exclude module: 'annotations'
    }

    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
        exclude module: 'annotations'
    }

    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
        exclude module: 'api'
    }

    api rootProject.ext.dependencies['rxerrorhandler2']
    api rootProject.ext.dependencies["timber"]
    implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }

    compileOnly rootProject.ext.dependencies["autolayout"]

}
