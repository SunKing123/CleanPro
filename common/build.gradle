apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName rootProject.ext.versionName
        versionCode rootProject.ext.versionCode

        /*解决ARouter::Compiler >>> No module name编译报错*/
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME    : project.getName()]
            }
        }

        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }

        dev {
            minifyEnabled false
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'/*子module混淆文件自管理*/
        }

        debug{}
        releasedebug{}
    }

}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api fileTree(include: ['*.aar'], dir: 'libs')
    api  rootProject.ext.dependencies["fastjson"]

    api rootProject.ext.dependencies["oss-android-sdk"]
    api rootProject.ext.dependencies["PhotoView"]

    //腾讯多渠道打包
    api rootProject.ext.dependencies["channel"]
    api rootProject.ext.dependencies["umsdk"]
    api rootProject.ext.dependencies["filedownloader"]

    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    // sdk版本分发布版 1.x.x 和 测试版 1.x.x-alpha
//    api (rootProject.ext.dependencies["NiuData"]) { changing = true }

    api rootProject.ext.dependencies["android-processes"]
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]

    api rootProject.ext.dependencies["lottie"]
    //WebView
//    api rootProject.ext.dependencies["agentweb"] // (必选)
//    api rootProject.ext.dependencies["filechooser"]// (可选)//这个会自带agentweb
    api rootProject.ext.dependencies["Downloader"]// (可选)

    api rootProject.ext.dependencies["stickylistheaders"]
    api rootProject.ext.dependencies["android-gif-drawable"]

    api rootProject.ext.dependencies["kotlin-stdlib-jdk7"]
    api rootProject.ext.dependencies["kotlin-reflect"]

    api project(path: ':otherlib:takephoto_library')

    api project(':otherlib:videoplayer')

    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50'
    api 'org.jetbrains.kotlin:kotlin-reflect:1.3.50'

    //oaid  sdk
//    api files('libs\\miit_mdid_1.0.13.aar')

    api project(':geekWebpage')
    api project(':arms')
    //修改agentweb4.1.3版本的一个bug，作者修改了提交到master，但没升级稳定版本
    api project(path: ':agentweb-core')

    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

}
